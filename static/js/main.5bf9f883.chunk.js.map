{"version":3,"sources":["ImgGallery.js","App.js","index.js"],"names":["MyComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","response","_response$data$_this$","dir","total","downloadPath","wrap","_context","prev","next","axios","get","sent","data","props","match","params","Id","setState","stop","componentDidMount","_callee2","_context2","_getStaticImages","_onImageClick","event","console","debug","target","_imageGallery","getCurrentIndex","_onImageLoad","src","_onSlide","index","_resetVideo","_onPause","_onScreenChange","fullScreenElement","_onPlay","_handleInputChange","state","defineProperty","value","_handleCheckboxChange","checked","_handleThumbnailPositionChange","thumbnailPosition","_callee3","images","url","i","_context3","concat","push","original","thumbnail","showVideo","showPlayButton","showGalleryPlayButton","showFullscreenButton","showGalleryFullscreenButton","_toggleShowVideo","Boolean","_renderVideo","item","react_default","createElement","className","embedUrl","onClick","bind","assertThisInitialized","width","height","frameBorder","allowFullScreen","alt","description","style","right","left","showIndex","showBullets","infinite","showThumbnails","showNav","isRTL","slideDuration","slideInterval","slideOnThumbnailOver","prevProps","prevState","pause","play","_this2","build_image_gallery_default","ref","items","lazyLoad","onImageLoad","onSlide","onPause","onScreenChange","onPlay","parseInt","additionalClass","onChange","window","open","React","Component","renderPage","margin","transition","letterSpacing","textTransform","App","react_router_dom","Fragment","react_router","path","render","exact","component","ImgGallery","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5bf9f883.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport '../node_modules/react-image-gallery/styles/css/image-gallery.css';\r\nimport './ImgGallery.css';\r\nimport ImageGallery from 'react-image-gallery';\r\n// const PREFIX_URL = 'https://raw.githubusercontent.com/xiaolin/react-image-gallery/master/static/';\r\n\r\n\r\nclass MyComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showIndex: true,\r\n            showBullets: true,\r\n            infinite: true,\r\n            showThumbnails: true,\r\n            showFullscreenButton: false,\r\n            showGalleryFullscreenButton: false,\r\n            showPlayButton: true,\r\n            showGalleryPlayButton: true,\r\n            showNav: true,\r\n            isRTL: false,\r\n            slideDuration: 450,\r\n            slideInterval: 2000,\r\n            slideOnThumbnailOver: false,\r\n            thumbnailPosition: 'bottom',\r\n            showVideo: {},\r\n            total: 0,\r\n            dir: '',\r\n            downloadPath: '',\r\n            images:[]\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.slideInterval !== prevState.slideInterval ||\r\n            this.state.slideDuration !== prevState.slideDuration) {\r\n            // refresh setInterval\r\n            this._imageGallery.pause();\r\n            this._imageGallery.play();\r\n        }\r\n    }\r\n\r\n    fetchData = async () => {\r\n        const response = await axios.get('https://raw.githubusercontent.com/nsfwebook/carouseldata/master/db.json');\r\n        if(response.data[this.props.match.params.Id]){\r\n            const { dir, total, downloadPath} = response.data[this.props.match.params.Id];\r\n            await this.setState({dir, total, downloadPath});\r\n        }\r\n        // console.log(response.data)\r\n        // console.log(response.data[this.props.match.params.Id])\r\n        // console.log(this.state)\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await this.fetchData();\r\n        this._getStaticImages();\r\n    }\r\n\r\n    _onImageClick = (event) => {\r\n        console.debug('clicked on image', event.target, 'at index', this._imageGallery.getCurrentIndex());\r\n    }\r\n\r\n    _onImageLoad = (event) => {\r\n        console.debug('loaded image', event.target.src);\r\n    }\r\n\r\n    _onSlide = (index) => {\r\n        this._resetVideo();\r\n        console.debug('slid to index', index);\r\n    }\r\n\r\n    _onPause = (index) => {\r\n        console.debug('paused on index', index);\r\n    }\r\n\r\n    _onScreenChange = (fullScreenElement) => {\r\n        console.debug('isFullScreen?', !!fullScreenElement);\r\n    }\r\n\r\n    _onPlay = (index) => {\r\n        console.debug('playing from index', index);\r\n    }\r\n\r\n    _handleInputChange = (state, event) => {\r\n        this.setState({[state]: event.target.value});\r\n    }\r\n\r\n    _handleCheckboxChange = (state, event) => {\r\n        this.setState({[state]: event.target.checked});\r\n    }\r\n\r\n    _handleThumbnailPositionChange = (event) => {\r\n        this.setState({thumbnailPosition: event.target.value});\r\n    }\r\n\r\n    _getStaticImages = async () => {\r\n        let images = this.state.images;\r\n        // console.log('total in getstaticimages',this.state.total)\r\n        const url = `https://raw.githubusercontent.com/nsfwebook/${this.state.dir}/master/`\r\n        // const url = 'https://picsum.photos/820/768';\r\n        for (let i = 1; i <= this.state.total; i++) {\r\n            images.push({\r\n                // original: `${PREFIX_URL}${i}.jpg`,\r\n                // thumbnail:`${PREFIX_URL}${i}t.jpg`,\r\n                original: `${url}${i}.jpg`,\r\n                thumbnail:`${url}${i}.jpg`,\r\n            });\r\n        }\r\n        // console.log(images)\r\n        await this.setState({images})\r\n        // console.log(this.state.images)\r\n        // return images;\r\n    }\r\n\r\n    _resetVideo = () => {\r\n        this.setState({showVideo: {}});\r\n\r\n        if (this.state.showPlayButton) {\r\n            this.setState({showGalleryPlayButton: true});\r\n        }\r\n\r\n        if (this.state.showFullscreenButton) {\r\n            this.setState({showGalleryFullscreenButton: true});\r\n        }\r\n    }\r\n\r\n    _toggleShowVideo = (url) => {\r\n        this.state.showVideo[url] = !Boolean(this.state.showVideo[url]);\r\n        this.setState({\r\n            showVideo: this.state.showVideo\r\n        });\r\n\r\n        if (this.state.showVideo[url]) {\r\n            if (this.state.showPlayButton) {\r\n                this.setState({showGalleryPlayButton: false});\r\n            }\r\n\r\n            if (this.state.showFullscreenButton) {\r\n                this.setState({showGalleryFullscreenButton: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderVideo = (item) => {\r\n        return (\r\n            <div className='image-gallery-image'>\r\n                {\r\n                    this.state.showVideo[item.embedUrl] ?\r\n                        <div className='video-wrapper'>\r\n                            <a\r\n                                className='close-video'\r\n                                onClick={this._toggleShowVideo.bind(this, item.embedUrl)}\r\n                            >\r\n                            </a>\r\n                            <iframe\r\n                                width='560'\r\n                                height='315'\r\n                                src={item.embedUrl}\r\n                                frameBorder='0'\r\n                                allowFullScreen\r\n                            >\r\n                            </iframe>\r\n                        </div>\r\n                        :\r\n                        <a onClick={this._toggleShowVideo.bind(this, item.embedUrl)}>\r\n                            <div className='play-button'>&nbsp;</div>\r\n                            <img src={item.original} alt={item.original}/>\r\n                            {\r\n                                item.description &&\r\n                                <span\r\n                                    className='image-gallery-description'\r\n                                    style={{right: '0', left: 'initial'}}\r\n                                >\r\n                    {item.description}\r\n                  </span>\r\n                            }\r\n                        </a>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.images)\r\n        if(this.state.total > 0) {\r\n            return (\r\n                <section className='app'>\r\n                    <ImageGallery\r\n                        ref={i => this._imageGallery = i}\r\n                        items={this.state.images}\r\n                        lazyLoad={false}\r\n                        onClick={this._onImageClick.bind(this)}\r\n                        onImageLoad={this._onImageLoad}\r\n                        onSlide={this._onSlide.bind(this)}\r\n                        onPause={this._onPause.bind(this)}\r\n                        onScreenChange={this._onScreenChange.bind(this)}\r\n                        onPlay={this._onPlay.bind(this)}\r\n                        infinite={this.state.infinite}\r\n                        showBullets={this.state.showBullets}\r\n                        showFullscreenButton={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton}\r\n                        showPlayButton={this.state.showPlayButton && this.state.showGalleryPlayButton}\r\n                        showThumbnails={this.state.showThumbnails}\r\n                        showIndex={this.state.showIndex}\r\n                        showNav={this.state.showNav}\r\n                        isRTL={this.state.isRTL}\r\n                        thumbnailPosition={this.state.thumbnailPosition}\r\n                        slideDuration={parseInt(this.state.slideDuration)}\r\n                        slideInterval={parseInt(this.state.slideInterval)}\r\n                        slideOnThumbnailOver={this.state.slideOnThumbnailOver}\r\n                        additionalClass=\"app-image-gallery\"\r\n                    />\r\n                    <div className='app-sandbox'>\r\n                        <div className='app-sandbox-content'>\r\n                            {/*<h2 className='app-header'>Settings</h2>*/}\r\n                            <ul className='app-buttons'>\r\n                                {/*<li>*/}\r\n                                {/*    <div className='app-interval-input-group'>*/}\r\n                                {/*        <span className='app-interval-label'>Play Interval</span>*/}\r\n                                {/*        <input*/}\r\n                                {/*            className='app-interval-input'*/}\r\n                                {/*            type='text'*/}\r\n                                {/*            onChange={this._handleInputChange.bind(this, 'slideInterval')}*/}\r\n                                {/*            value={this.state.slideInterval}/>*/}\r\n                                {/*    </div>*/}\r\n                                {/*</li>*/}\r\n\r\n                                {/*<li>*/}\r\n                                {/*    <div className='app-interval-input-group'>*/}\r\n                                {/*        <span className='app-interval-label'>Slide Duration</span>*/}\r\n                                {/*        <input*/}\r\n                                {/*            className='app-interval-input'*/}\r\n                                {/*            type='text'*/}\r\n                                {/*            onChange={this._handleInputChange.bind(this, 'slideDuration')}*/}\r\n                                {/*            value={this.state.slideDuration}/>*/}\r\n                                {/*    </div>*/}\r\n                                {/*</li>*/}\r\n\r\n                                <li>\r\n                                    <div className='app-interval-input-group'>\r\n                                        <span className='app-interval-label'>Thumbnail Bar Position</span>\r\n                                        <select\r\n                                            className='app-interval-input'\r\n                                            value={this.state.thumbnailPosition}\r\n                                            onChange={this._handleThumbnailPositionChange.bind(this)}\r\n                                        >\r\n                                            <option value='bottom'>Bottom</option>\r\n                                            <option value='top'>Top</option>\r\n                                            <option value='left'>Left</option>\r\n                                            <option value='right'>Right</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className='app-interval-input-group' onClick={()=>window.open(this.state.downloadPath)}>\r\n                                        <span className='app-interval-btn'>Download Link</span>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            {/*<ul className='app-checkboxes'>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='infinite'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'infinite')}*/}\r\n                            {/*            checked={this.state.infinite}/>*/}\r\n                            {/*        <label htmlFor='infinite'>allow infinite sliding</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='show_fullscreen'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'showFullscreenButton')}*/}\r\n                            {/*            checked={this.state.showFullscreenButton}/>*/}\r\n                            {/*        <label htmlFor='show_fullscreen'>show fullscreen button</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='show_playbutton'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'showPlayButton')}*/}\r\n                            {/*            checked={this.state.showPlayButton}/>*/}\r\n                            {/*        <label htmlFor='show_playbutton'>show play button</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='show_bullets'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'showBullets')}*/}\r\n                            {/*            checked={this.state.showBullets}/>*/}\r\n                            {/*        <label htmlFor='show_bullets'>show bullets</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='show_thumbnails'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'showThumbnails')}*/}\r\n                            {/*            checked={this.state.showThumbnails}/>*/}\r\n                            {/*        <label htmlFor='show_thumbnails'>show thumbnails</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='show_navigation'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'showNav')}*/}\r\n                            {/*            checked={this.state.showNav}/>*/}\r\n                            {/*        <label htmlFor='show_navigation'>show navigation</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='show_index'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'showIndex')}*/}\r\n                            {/*            checked={this.state.showIndex}/>*/}\r\n                            {/*        <label htmlFor='show_index'>show index</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='is_rtl'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'isRTL')}*/}\r\n                            {/*            checked={this.state.isRTL}/>*/}\r\n                            {/*        <label htmlFor='is_rtl'>is right to left</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*    <li>*/}\r\n                            {/*        <input*/}\r\n                            {/*            id='slide_on_thumbnail_hover'*/}\r\n                            {/*            type='checkbox'*/}\r\n                            {/*            onChange={this._handleCheckboxChange.bind(this, 'slideOnThumbnailOver')}*/}\r\n                            {/*            checked={this.state.slideOnThumbnailOver}/>*/}\r\n                            {/*        <label htmlFor='slide_on_thumbnail_hover'>slide on mouse over thumbnails</label>*/}\r\n                            {/*    </li>*/}\r\n                            {/*</ul>*/}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            );\r\n        }else{\r\n            return (\r\n                <div  className='app-sandbox'>\r\n                    <h2 className='app-header'>Error Code: 404</h2>\r\n                    <h3>Please make sure the path is correct</h3>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default MyComponent;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport ImgGallery from './ImgGallery';\r\n// import Response from './Response';\r\n\r\nconst renderPage = () =>{\r\n    const Header = {letterSpacing: '1px', textTransform: 'uppercase'};\r\n    const sandbox = {margin: '0 auto', width: '50%', transition: 'all 1s ease'};\r\n    return (\r\n        <div  style={sandbox}>\r\n            <h2 style={Header}>Code: 000</h2>\r\n            <h3>Nothing Here</h3>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst App = ( ) => {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <React.Fragment>\r\n                <Switch>\r\n                    <Route path=\"/\" render={renderPage} exact />\r\n                    <Route path=\"/:Id\" component={ImgGallery} exact />\r\n                    <Route render={renderPage} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n};\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}